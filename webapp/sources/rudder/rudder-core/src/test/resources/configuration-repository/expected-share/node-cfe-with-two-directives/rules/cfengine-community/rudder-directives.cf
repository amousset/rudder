#####################################################################################
# Copyright 2015 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

# This file is the main entry points for the bundle sequence for
# Rudder user directives. It is actually a list of method calls, and not
# a bundle sequence, which allows to add the technique or directives
# names as promiser.

body file control {

  inputs => {
    "Create_file/1.0/rudder_reporting.cf",
    "Create_file/1.0/Create_file.cf",
    "packageManagement/1.0/packageManagement.cf",
  };

}


bundle agent rudder_directives {

  methods:
      "pre-run-hook"                                  usebundle => runhook_package('{"parameters":{"package":"vim"},"reports":[{"id":"208716db-2675-43b9-ab57-bfbab84346aa@@16d86a56-93ef-49aa-86b7-0d10102e4ea9@@0","mode":"enforce","technique":"Create_file","name":"vim_installed","value":"None"}]}');
      "50-rule-technique-ncf/Create a file"           usebundle => rudder_reporting_context("16d86a56-93ef-49aa-86b7-0d10102e4ea9","208716db-2675-43b9-ab57-bfbab84346aa","Create_file");
      "50-rule-technique-ncf/Create a file"           usebundle => set_dry_run_mode("false");
      "50-rule-technique-ncf/Create a file"           usebundle => enable_reporting;
      "50-rule-technique-ncf/Create a file"           usebundle => Create_file("\"foo");
      "50-rule-technique-ncf/Create a file"           usebundle => Create_file_rudder_reporting("\"foo");
      "50-rule-technique-ncf/Create a file"           usebundle => clean_reporting_context;
      "60-rule-technique-std-lib/Package management." usebundle => rudder_reporting_context("16617aa8-1f02-4e4a-87b6-d0bcdfb4019f","ff44fb97-b65e-43c4-b8c2-0df8d5e8549f","packageManagement");
      "60-rule-technique-std-lib/Package management." usebundle => set_dry_run_mode("false");
      "60-rule-technique-std-lib/Package management." usebundle => disable_reporting;
      "60-rule-technique-std-lib/Package management." usebundle => package_management;
      "60-rule-technique-std-lib/Package management." usebundle => clean_reporting_context;
      "remove_dry_run_mode"                           usebundle => disable_reporting;
      "remove_dry_run_mode"                           usebundle => set_dry_run_mode("false");
      "remove_dry_run_mode"                           usebundle => clean_reporting_context;
      "post-run-hook"                                 usebundle => runhook_servive('{"parameters":{"service":"some value","a post command":"/something/that/is/complicated \"with\" 'all sort of quote'"},"reports":[{"id":"208716db-2675-43b9-ab57-bfbab84346aa@@16d86a56-93ef-49aa-86b7-0d10102e4ea9@@0","mode":"enforce","technique":"Create_file","name":"some value status","value":"restarted"}]}');
      "remove_dry_run_mode_for_system"                usebundle => disable_reporting;
      "remove_dry_run_mode_for_system"                usebundle => set_dry_run_mode("false");
      "remove_dry_run_mode_for_system"                usebundle => clean_reporting_context;

}

